doc.type html
script
hmtl
head
utf8
viewport content=width=device-width, initial-scale=one
title covidstrings 6 second round bracket
div id bracket class bracket div
script src bracket .js
link rel= stylesheet href=css
head
body
bracket-container{}
matchup
solid zero;
padding 
text align center 
filename=covid strings6 second round.js 
highest remaining seed =(greatest remaining num value in covid strings list)
lowest remaining seed = (lowest remaining num value in covid strings list)
intermediate seed1=(first middle remaining value in covid strings list)
intermediate seed2=(second middle remaining value in covid strings list)
createround=covid strings6 second round 
round =document.createelement(civ);
round.classlist.add(round);
for (let i = zero; i < teams.length; i += two) 
round.appendchild(creatematchup(teams[i],teams[i+one]));
return round;
bracket.appendchild(createround(teams));
create matchup(intermediate seed2 versus intermediate seed1)
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =div>${team1}</div><div>${team2}</div>;
return matchup;
create matchup(lowest remaining seed versus highest remaining seed )
matchup =document.createelement(div);
matchup.classlist.add(matchup);
matchup.innerHTML =<div>${team1}</div><div>${team2}</div>;
return matchup;
java util.scanner
java.util
questions[]questions={
collections.shuffle(arrays.aslist(questions)
question19
question20
question21
question22
question23
question24
question25
question26
advanceteams=slice(current teams)
result=declarewinner(team1 score, team2 score)
if intermediate seed1 score>=fourty:
console.log(intermediate seed1 advances)
else:
console.log(intermediate seed2 advances)
result=declarewinner(team1 score, team2 score)
highest remaining seed score>=fourty:
console.log(highest remaining seed advances)
else:
console.log(lowest remaining seed advances)
return filename
